import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{aj as o,an as a,bn as e,al as t,bo as r,bl as l,bm as m,am as p,ak as c}from"./app-DhNDvZEA.js";const g="/assets/nvs-C1q4DVju.png",d="/assets/3d_supervision-BNOJN4rh.png",h="/assets/2d_supervision-DxU-VQgj.png",y="/assets/volume_rendering-BwHkkdjv.png",u="/assets/implicit_representation-BGMSmSmJ.png",f="/assets/hybrid_representation-CpKZ86ae.png",b="/assets/hybrid_forms-tgOQNfAn.png",v={};function w(k,s){const n=p("RouteLink");return c(),o("div",null,[s[35]||(s[35]=a("h1",{id:"a-surge-in-nerf",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#a-surge-in-nerf"},[a("span",null,"A Surge in NeRF")])],-1)),s[36]||(s[36]=a("h2",{id:"news",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#news"},[a("span",null,"News")])],-1)),a("p",null,[s[4]||(s[4]=e("My post on ")),t(n,{to:"/blog/ml/nerf/nerf_rendering.html"},{default:r(()=>s[0]||(s[0]=[e("volume rendering")])),_:1}),s[5]||(s[5]=e(" is out! (")),t(n,{to:"/blog/ml/nerf/nerf_rendering.html"},{default:r(()=>s[1]||(s[1]=[e("link")])),_:1}),s[6]||(s[6]=e(")")),s[7]||(s[7]=a("br",null,null,-1)),s[8]||(s[8]=e(" My post on ")),t(n,{to:"/blog/ml/nerf/nerf_ndc.html"},{default:r(()=>s[2]||(s[2]=[e("NDC space")])),_:1}),s[9]||(s[9]=e(" is out! (")),t(n,{to:"/blog/ml/nerf/nerf_ndc.html"},{default:r(()=>s[3]||(s[3]=[e("link")])),_:1}),s[10]||(s[10]=e(")")),s[11]||(s[11]=a("br",null,null,-1))]),s[37]||(s[37]=l('<h2 id="overview" tabindex="-1"><a class="header-anchor" href="#overview"><span>Overview</span></a></h2><p>neural radiance field (NeRF)</p><p>extended to other fields such as generative modeling (GRAF, GIRAFFE, DreamField), relighting (?, NeRF-OSR), scene editing (CCNeRF), etc.</p><p>focus on nvs/reconstruction</p><h2 id="background" tabindex="-1"><a class="header-anchor" href="#background"><span>Background</span></a></h2><h3 id="what-do-we-want" tabindex="-1"><a class="header-anchor" href="#what-do-we-want"><span>What do we want?</span></a></h3><p><em>Novel view synthesis</em> (NVS) refers to the problem of capturing a scene from a novel angle given a few input images. With downstream applications to modeling, animation, and mixed reality, NVS is fundamental to the computer vision (CV) and computer graphics (CG) fields.</p><img src="'+g+'" alt="The novel view synthesis problem" title="copyright © YU Yue"><p>The problem is typically attacked in two stages: inverse rendering — constructing a 3D representation from input images — and rendering — mapping high-dimensional to pixel colors of a raster image.</p><img src="'+d+'" alt="Supervision in 3D" title="copyright © YU Yue"><p><strong>CV for inverse rendering</strong> A 3D model can be explicitly represented by mesh, point cloud, voxel grid, or <strong>m</strong>ulti-<strong>p</strong>lane <strong>i</strong>mages (MPI). This renders learning-based solutions to other pertinent problems qualified for reconstruction, such as <strong>s</strong>tructure <strong>f</strong>rom <strong>m</strong>otion (SfM) and <strong>m</strong>ulti-<strong>v</strong>iew <strong>s</strong>tereo (MVS). Nonetheless, those approaches are often dependent on direct supervion, where 3D ground truths are time-consuming to obtain. Explicit representations are also memory-demanding. Hence, learning-based CV schemes hardly scale to real-world scenes.</p><img src="'+h+'" alt="Supervision in 2D?" title="copyright © YU Yue"><p><strong>Is there a way to learn from 2D supervision? Is there a way to reduce memory footprint of 3D representations?</strong> This is where NeRF steps in. Before proceeding to its thrival, there is a (significant) obstacle to overcome — the rendering process <strong>must</strong> be differentiable. Otherwise, gradients cannot propagate back to the geometric representation, and the network never congerges.</p><h3 id="differentiable-rendering" tabindex="-1"><a class="header-anchor" href="#differentiable-rendering"><span>Differentiable rendering</span></a></h3><img src="'+y+'" alt="Differentiable rendering" title="copyright © YU Yue">',15)),a("p",null,[s[13]||(s[13]=e("Classical graphics pipelines leverage matrix operations on triangular (or polygonal) meshes for a raster image. This process is ")),s[14]||(s[14]=a("strong",null,"not",-1)),s[15]||(s[15]=e(" differentiable in that gradient w.r.t. geometry is either hard to compute or unhelpful. 3D representations for differentiable rendering tend to be ")),s[16]||(s[16]=a("strong",null,"implicit",-1)),s[17]||(s[17]=e(". ")),s[18]||(s[18]=a("a",{href:"https://avg.is.mpg.de/publications/niemeyer2020cvpr",target:"_blank",rel:"noopener noreferrer"},"DVR",-1)),s[19]||(s[19]=e(", with a misleading")),s[20]||(s[20]=a("sup",{class:"footnote-ref"},[a("a",{href:"#footnote1"},"[1]"),a("a",{class:"footnote-anchor",id:"footnote-ref1"})],-1)),s[21]||(s[21]=e(" title, differentiably renders a pixel given implicit surfaces. An alternative is ")),t(n,{to:"/blog/ml/nerf/nerf_rendering.html"},{default:r(()=>s[12]||(s[12]=[e("volume rendering")])),_:1}),s[22]||(s[22]=l(', where a ray <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold-italic">r</mi><mo>=</mo><mi mathvariant="bold-italic">o</mi><mo>+</mo><mi>z</mi><mi mathvariant="bold-italic">d</mi></mrow><annotation encoding="application/x-tex">\\boldsymbol{r} = \\boldsymbol{o} + z\\boldsymbol{d}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4444em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03194em;">r</span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">o</span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mord"><span class="mord"><span class="mord boldsymbol">d</span></span></span></span></span></span> &quot;casts&quot; to a volumetric representation, and colors are &quot;cummulated&quot; by',3))]),s[38]||(s[38]=l('<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="bold">C</mi><mo stretchy="false">(</mo><mi mathvariant="bold-italic">r</mi><mo stretchy="false">)</mo><mo>=</mo><mstyle mathcolor="gray"><mi mathvariant="bold">C</mi><mo stretchy="false">(</mo><mi>z</mi><mo separator="true">;</mo><mi mathvariant="bold-italic">o</mi><mo separator="true">,</mo><mi mathvariant="bold-italic">d</mi><mo stretchy="false">)</mo><mo>=</mo></mstyle><msubsup><mo>∫</mo><msub><mi>z</mi><mi>n</mi></msub><msub><mi>z</mi><mi>f</mi></msub></msubsup><mi>T</mi><mstyle mathcolor="gray"><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mstyle><mi>σ</mi><mrow><mo fence="true">(</mo><mi mathvariant="bold-italic">r</mi><mstyle mathcolor="gray"><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mstyle><mo fence="true">)</mo></mrow><mi mathvariant="bold-italic">c</mi><mrow><mo fence="true">(</mo><mi mathvariant="bold-italic">r</mi><mstyle mathcolor="gray"><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mstyle><mo separator="true">,</mo><mi mathvariant="bold-italic">d</mi><mo fence="true">)</mo></mrow><mtext> </mtext><mi>d</mi><mi>z</mi><mo separator="true">,</mo><mtext> </mtext><mi>T</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mo>−</mo><msubsup><mo>∫</mo><msub><mi>z</mi><mi>n</mi></msub><mi>z</mi></msubsup><mi>σ</mi><mrow><mo fence="true">(</mo><mi mathvariant="bold-italic">r</mi><mstyle mathcolor="gray"><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo></mstyle><mo fence="true">)</mo></mrow><mtext> </mtext><mi>d</mi><mi>s</mi><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex"> \\mathbf{C}(\\boldsymbol{r}) = \\gray{\\mathbf{C}(z; \\boldsymbol{o}, \\boldsymbol{d}) =} \\int_{z_n}^{z_f} T\\gray{(z)} \\sigma \\left( \\boldsymbol{r}\\gray{(z)} \\right) \\boldsymbol{c} \\left(\\boldsymbol{r}\\gray{(z)}, \\boldsymbol{d} \\right) \\ dz, \\ T(z) = \\exp \\left(-\\int_{z_n}^z \\sigma \\left(\\boldsymbol{r} \\gray{(s)} \\right) \\ ds \\right) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathbf">C</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03194em;">r</span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathbf" style="color:gray;">C</span><span class="mopen" style="color:gray;">(</span><span class="mord mathnormal" style="margin-right:0.04398em;color:gray;">z</span><span class="mpunct" style="color:gray;">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord" style="color:gray;"><span class="mord" style="color:gray;"><span class="mord boldsymbol" style="color:gray;">o</span></span></span><span class="mpunct" style="color:gray;">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord" style="color:gray;"><span class="mord" style="color:gray;"><span class="mord boldsymbol" style="color:gray;">d</span></span></span><span class="mclose" style="color:gray;">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel" style="color:gray;">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4263em;vertical-align:-1.012em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4143em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2901em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.012em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen" style="color:gray;">(</span><span class="mord mathnormal" style="margin-right:0.04398em;color:gray;">z</span><span class="mclose" style="color:gray;">)</span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03194em;">r</span></span></span><span class="mopen" style="color:gray;">(</span><span class="mord mathnormal" style="margin-right:0.04398em;color:gray;">z</span><span class="mclose" style="color:gray;">)</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">c</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03194em;">r</span></span></span><span class="mopen" style="color:gray;">(</span><span class="mord mathnormal" style="margin-right:0.04398em;color:gray;">z</span><span class="mclose" style="color:gray;">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">d</span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.462em;vertical-align:-1.012em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4143em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.012em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.03194em;">r</span></span></span><span class="mopen" style="color:gray;">(</span><span class="mord mathnormal" style="color:gray;">s</span><span class="mclose" style="color:gray;">)</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace"> </span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">s</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></span></p><p>given &quot;volume density&quot; <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span> and color <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold-italic">c</mi></mrow><annotation encoding="application/x-tex">\\boldsymbol{c}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4444em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">c</span></span></span></span></span></span>.</p><h3 id="ray-tracing-ray-casting-ray-marching" tabindex="-1"><a class="header-anchor" href="#ray-tracing-ray-casting-ray-marching"><span>Ray tracing? Ray casting? Ray marching!</span></a></h3>',3)),a("p",null,[t(n,{to:"/blog/ml/nerf/nerf_rendering.html"},{default:r(()=>s[23]||(s[23]=[e("Volume rendering")])),_:1}),s[24]||(s[24]=e(' is an image-ordered approach. For every pixel, a ray ejects from the camera, passes through the pixel center, and "casts" to the volumetric representation. Unlink ')),s[25]||(s[25]=a("em",null,"ray tracing",-1)),s[26]||(s[26]=e(", it does ")),s[27]||(s[27]=a("strong",null,"not",-1)),s[28]||(s[28]=e(" reflect off surfaces. Rather, it marches through the entire volume. This is reminiscent of ")),s[29]||(s[29]=a("em",null,"ray casting",-1)),s[30]||(s[30]=e(", widely applicable in medical imaging. On the constrary, it does ")),s[31]||(s[31]=a("strong",null,"not",-1)),s[32]||(s[32]=e(' intend to reveal the internal structure of "volume data". What we want is the color of that pixel. Such a novel approach is referred to ')),s[33]||(s[33]=a("em",null,[a("strong",null,"ray marching")],-1)),s[34]||(s[34]=e("."))]),m(" This is actually a `note` container. "),s[39]||(s[39]=l('<div class="hint-container info"><p class="hint-container-title">Info</p><p>personal view, may be controversial</p><p>not strictly &quot;physical&quot;</p></div><h2 id="analysis" tabindex="-1"><a class="header-anchor" href="#analysis"><span>Analysis</span></a></h2><p>The above integral demands the <strong>continuity</strong> of <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span> and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold-italic">c</mi></mrow><annotation encoding="application/x-tex">\\boldsymbol{c}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4444em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">c</span></span></span></span></span></span>, making the volumetric representation essentially a <a href="https://en.wikipedia.org/wiki/Field_(physics)" target="_blank" rel="noopener noreferrer"><em>scalar field</em></a>.</p><img src="'+u+'" alt="Coordinate-based MLP as radiance field" title="copyright © YU Yue"><p><strong>MLP as radiance field</strong></p><h3 id="entirely-implicit-a-step-back" tabindex="-1"><a class="header-anchor" href="#entirely-implicit-a-step-back"><span>Entirely implicit? A step back…</span></a></h3><img src="'+f+'" alt="Introduction of feature grid for rapid convergence" title="copyright © YU Yue"><img src="'+b+'" alt="Feature grids take several forms." title="copyright © YU Yue"><h3 id="men-are-still-good" tabindex="-1"><a class="header-anchor" href="#men-are-still-good"><span>&quot;Men are still good.&quot;<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup></span></a></h3><p>mip-NeRF, mip-NeRF 360, ref-NeRF</p><h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary"><span>Summary</span></a></h2><h2 id="references" tabindex="-1"><a class="header-anchor" href="#references"><span>References</span></a></h2><p><a href="https://cs184.eecs.berkeley.edu" target="_blank" rel="noopener noreferrer">CS184/284a</a> by <a href="https://eecs.berkeley.edu" target="_blank" rel="noopener noreferrer">UC Berkeley</a><br><a href="http://graphics.stanford.edu/courses/cs348n-22-winter/" target="_blank" rel="noopener noreferrer">CS348n</a> by <a href="https://cs.stanford.edu/" target="_blank" rel="noopener noreferrer">Stanford University</a><br><a href="https://arxiv.org/abs/2111.10427" target="_blank" rel="noopener noreferrer">DIVeR: Real-time and Accurate Neural Radiance Fields with Deterministic Integration for Volume Rendering</a><br><a href="https://nvlabs.github.io/instant-ngp/assets/mueller2022instant.pdf" target="_blank" rel="noopener noreferrer">Instant Neural Graphics Primitives with a Multiresolution Hash Encoding</a><br><a href="https://arxiv.org/abs/2103.13415" target="_blank" rel="noopener noreferrer">Mip-NeRF: A Multiscale Representation for Anti-Aliasing Neural Radiance Fields</a><br><a href="https://arxiv.org/abs/2003.08934" target="_blank" rel="noopener noreferrer">NeRF: Representing Scenes as Neural Radiance Fields for View Synthesis</a><br><a href="https://arxiv.org/abs/2007.11571" target="_blank" rel="noopener noreferrer">Neural Sparse Voxel Fields</a><br><a href="https://arxiv.org/abs/2103.14024" target="_blank" rel="noopener noreferrer">PlenOctrees for Real-time Neural Radiance Fields</a><br><a href="https://arxiv.org/abs/2112.05131" target="_blank" rel="noopener noreferrer">Plenoxels: Radiance Fields without Neural Networks</a><br><a href="https://arxiv.org/abs/2201.08845" target="_blank" rel="noopener noreferrer">Point-NeRF: Point-based Neural Radiance Fields</a><br><a href="https://arxiv.org/abs/2112.03907" target="_blank" rel="noopener noreferrer">Ref-Nerf: Structured View-Dependent Appearance for Neural Radiance Fields</a><br><a href="https://www.zhihu.com/question/526879513" target="_blank" rel="noopener noreferrer">NeRF（神经辐射场）有相关的物理（光学）原理支撑吗？</a></p><h2 id="errata" tabindex="-1"><a class="header-anchor" href="#errata"><span>Errata</span></a></h2><table><thead><tr><th>Time</th><th>Modification</th></tr></thead><tbody><tr><td>Sep 18 2022</td><td>Pre-release</td></tr><tr><td>Oct 16 2022</td><td>Initial release</td></tr></tbody></table><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>? <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p></li><li id="footnote2" class="footnote-item"><p>&quot;Men are still good&quot; is an ending line from the film <a href="https://www.imdb.com/title/tt2975590/" target="_blank" rel="noopener noreferrer">Batman v Superman: Dawn of Justice</a> conveying Bruce Wayne&#39;s faith in mankind. It is cited here to imply that pure MLP representations of radiance field are not (at all) inferior to &quot;hybrid&quot; rpresentations, in terms of quality, of course. <a href="#footnote-ref2" class="footnote-backref">↩︎</a></p></li></ol></section>',17))])}const R=i(v,[["render",w],["__file","index.html.vue"]]),N=JSON.parse('{"path":"/blog/ml/nerf/","title":"A Surge in NeRF","lang":"en-US","frontmatter":{"title":"A Surge in NeRF","author":false,"article":true,"category":["ML"],"tag":["Graphics","Rendering","NeRF"],"date":"2022-09-18T00:00:00.000Z","description":"A Surge in NeRF News My post on is out! () My post on is out! () Overview neural radiance field (NeRF) extended to other fields such as generative modeling (GRAF, GIRAFFE, Dream...","head":[["meta",{"property":"og:url","content":"https://yconquesty.github.io/blog/ml/nerf/"}],["meta",{"property":"og:site_name","content":"Yue Yu"}],["meta",{"property":"og:title","content":"A Surge in NeRF"}],["meta",{"property":"og:description","content":"A Surge in NeRF News My post on is out! () My post on is out! () Overview neural radiance field (NeRF) extended to other fields such as generative modeling (GRAF, GIRAFFE, Dream..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-10-21T23:42:24.000Z"}],["meta",{"property":"article:tag","content":"Graphics"}],["meta",{"property":"article:tag","content":"Rendering"}],["meta",{"property":"article:tag","content":"NeRF"}],["meta",{"property":"article:published_time","content":"2022-09-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-21T23:42:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"A Surge in NeRF\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-09-18T00:00:00.000Z\\",\\"dateModified\\":\\"2024-10-21T23:42:24.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Yue Yu\\",\\"url\\":\\"https://yconquesty.github.io\\",\\"email\\":\\"yconquesty@gmail.com\\"}]}"]]},"headers":[{"level":2,"title":"News","slug":"news","link":"#news","children":[]},{"level":2,"title":"Overview","slug":"overview","link":"#overview","children":[]},{"level":2,"title":"Background","slug":"background","link":"#background","children":[{"level":3,"title":"What do we want?","slug":"what-do-we-want","link":"#what-do-we-want","children":[]},{"level":3,"title":"Differentiable rendering","slug":"differentiable-rendering","link":"#differentiable-rendering","children":[]},{"level":3,"title":"Ray tracing? Ray casting? Ray marching!","slug":"ray-tracing-ray-casting-ray-marching","link":"#ray-tracing-ray-casting-ray-marching","children":[]}]},{"level":2,"title":"Analysis","slug":"analysis","link":"#analysis","children":[{"level":3,"title":"Entirely implicit? A step back…","slug":"entirely-implicit-a-step-back","link":"#entirely-implicit-a-step-back","children":[]},{"level":3,"title":"\\"Men are still good.\\"","slug":"men-are-still-good","link":"#men-are-still-good","children":[]}]},{"level":2,"title":"Summary","slug":"summary","link":"#summary","children":[]},{"level":2,"title":"References","slug":"references","link":"#references","children":[]},{"level":2,"title":"Errata","slug":"errata","link":"#errata","children":[]}],"git":{"createdTime":1663435538000,"updatedTime":1729554144000,"contributors":[{"name":"Will Yu","email":"yconquesty@gmail.com","commits":3},{"name":"YU Yue","email":"yconquesty@gmail.com","commits":3}]},"filePathRelative":"blog/ml/nerf/README.md","localizedDate":"September 18, 2022","excerpt":"\\n<h2>News</h2>\\n<p>My post on <a href=\\"/blog/ml/nerf/nerf_rendering.html\\" target=\\"_blank\\">volume rendering</a> is out! (<a href=\\"/blog/ml/nerf/nerf_rendering.html\\" target=\\"_blank\\">link</a>)<br>\\nMy post on <a href=\\"/blog/ml/nerf/nerf_ndc.html\\" target=\\"_blank\\">NDC space</a> is out! (<a href=\\"/blog/ml/nerf/nerf_ndc.html\\" target=\\"_blank\\">link</a>)<br></p>","autoDesc":true}');export{R as comp,N as data};
